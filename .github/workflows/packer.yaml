name: Build AMI with Packer

on:
  push:
    branches:
      - main

jobs:
  packer_build:
    name: Packer Build
    runs-on: ubuntu-latest
    environment: dev

    outputs:
      ami_id: ${{ steps.build.outputs.ami_id }}

    steps:
      - name: сheckout
        run: |
          git clone https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          pwd
          ls -lah
          cd ${{ github.event.repository.name }}

      # - name: Check for Packer changes
      #   id: changes
      #   run: |
      #     cd ${{ github.event.repository.name }}
      #     if git diff --quiet HEAD^ HEAD .packer/ then
      #       echo "No changes in Packer configuration. Skipping build."
      #       exit 0
      #     else
      #       echo "Packer files changed. Proceeding with build."
      #     fi

      #TODO: добавить возможность пропуска, хз вручную как то, апровы или что еще, придумать короче

      # - name: build
      #   id: build
      #   # if: steps.changes.outcome != 'success'
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #   run: |
      #     cd ${{ github.event.repository.name }}
      #     cd packer
      #     packer init .
      #     packer build .
      #     cat manifest.json
      #     ami_id_val=$(jq -r '(.last_run_uuid as $uid | .builds[] | select(.packer_run_uuid == $uid) | .artifact_id | split(":")[1])' manifest.json)
      #     echo "kek *$ami_id_val*"
      #     echo "ami_id=${ami_id_val}" >> "$GITHUB_OUTPUT"

  terraform_deploy:
    name: Terraform Deploy
    runs-on: ubuntu-latest
    environment: dev
    needs: packer_build

    steps:
      - name: сheckout
        run: |
          git clone https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          pwd
          ls -lah
          cd ${{ github.event.repository.name }}

      - name: test
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          echo "AMI_ID: ${{ needs.packer_build.outputs.ami_id }}"
          cd ${{ github.event.repository.name }}/terraform
          echo $AWS_ACCESS_KEY_ID
          echo $AWS_SECRET_ACCESS_KEY

          terraform init
          terraform plan -var="ami_id=ami-0d02f4dc282064d6a"
          terraform apply -var="ami_id=ami-0d02f4dc282064d6a" -auto-approve

